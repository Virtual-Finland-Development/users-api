name: Deploy to the selected environment

on:
  workflow_call:
    inputs:
      environment:
        description: Environment where to deploy the stack (dev, staging)
        type: string
        required: true
  workflow_dispatch:
    inputs:
      environment:
        description: Environment where to deploy the stack (dev, staging)
        type: environment
        required: true
jobs:
  build-and-test:
    name: Build and test
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Install EF Tool
        run: |
          dotnet new tool-manifest
          dotnet tool install dotnet-ef
      - name: Pulumi Users API Integration Tests
        run: dotnet test ./VirtualFinland.UsersAPI.UnitTests --no-restore
      - name: Install AWS Dotnet CLI Lambda Tools
        run: dotnet tool install -g Amazon.Lambda.Tools
      - name: Build UserAPI Lamda Package
        working-directory: ./VirtualFinland.UserAPI/src/VirtualFinland.UsersAPI
        run: dotnet lambda package
      - name: Generate EF migration script
        working-directory: ./VirtualFinland.UserAPI/src/VirtualFinland.UsersAPI
        run: dotnet ef migrations bundle --configuration Bundle --output=efbundle.exe
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: Application_Artifact
          path: /home/runner/work/users-api/users-api/VirtualFinland.UserAPI/src/VirtualFinland.UsersAPI/bin/Release/net6.0/VirtualFinland.UsersAPI.zip
          retention-days: 2
      - name: Upload database migration bundle artifact
        uses: actions/upload-artifact@v3
        with:
          name: DatabaseMigrationBundle_Artifact
          path: /home/runner/work/users-api/users-api/VirtualFinland.UserAPI/src/VirtualFinland.UsersAPI/efbundle.exe
          retention-days: 2
  deploy:
    name: Deploy to AWS ${{ inputs.environment }}-environment
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    needs: build-and-test
    permissions:
      id-token: write
      contents: read
    env:
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      DEPLOYMENT_EVENT_IDENT: users-api-deployment-${{ inputs.environment }}-${{ github.event.repository.updated_at}}
    steps:
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Install Pulumi CLI
        uses: pulumi/actions@v4
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: Application_Artifact
          path: ./
      - uses: actions/download-artifact@v3
        with:
          name: DatabaseMigrationBundle_Artifact
          path: ./
      - name: Configure AWS credentials
        uses: Virtual-Finland-Development/infrastructure/.github/actions/configure-aws-credentials@main
        with:
          environment: ${{ inputs.environment }}
          aws-region: ${{ secrets.AWS_REGION }}
          pulumi-access-token: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      - name: Resolve Database identifier with Pulumi
        id: get-pulumi-db-identfier
        continue-on-error: true # Continue if db does not yet exist
        uses: pulumi/actions@v4
        with:
          work-dir: ./VirtualFinland.UsersAPI.Deployment
          command: stack output DBIdentifier
          stack-name: ${{ secrets.PULUMI_ORGANIZATION }}/${{ inputs.environment }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      - name: Create database backup snapshot on PRE-deployment
        continue-on-error: true # TODO: needs a check if db exists but snapshot creation fails
        run: |
          aws rds create-db-snapshot --db-instance-identifier ${{ steps.get-pulumi-db-identfier.outputs.DBIdentifier }} --db-snapshot-identifier PRE-${{ env.DEPLOYMENT_EVENT_IDENT }}
      - name: Deploy with Pulumi
        id: pulumi-up
        uses: pulumi/actions@v4
        with:
          work-dir: ./VirtualFinland.UsersAPI.Deployment
          command: up
          stack-name: ${{ secrets.PULUMI_ORGANIZATION }}/${{ inputs.environment }}
          upsert: true
          config-map: "{ appArtifactPath: { value: ../VirtualFinland.UsersAPI.zip, secret: false } }"
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      - name: Apply EF migration script
        run: ./efbundle.exe --connection "${{ steps.pulumi-up.outputs.DbConnectionString }}"
      - name: Create database backup snapshot on POST-deployment
        continue-on-error: false # Fail the deployment if the snapshot creation fails
        run: |
          aws rds create-db-snapshot --db-instance-identifier ${{ steps.pulumi-up.outputs.DBIdentifier }} --db-snapshot-identifier POST-${{ env.DEPLOYMENT_EVENT_IDENT }}
      - name: Tag the deployment
        uses: Virtual-Finland-Development/automatic-release-action@v1.0
        if: ${{ inputs.environment == 'staging' }}
        with:
          environment: ${{ inputs.environment }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
