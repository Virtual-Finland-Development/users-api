version: "3.1"

services:
  usersapi:
    image: virtualfinland/usersapi:latest
    build:
      context: ./VirtualFinland.UserAPI/src/VirtualFinland.UsersAPI
      dockerfile: ${USERAPI_DOCKERFILE:-Dockerfile}
    ports:
      - 5001:80
    depends_on:
      postgresdb:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: local
      CONNECTIONSTRINGS__DEFAULTCONNECTION: Host=postgresdb;Database=postgres;Username=postgres;Password=example
      AWS_REGION: eu-north-1
      REDIS_ENDPOINT: redis:6379
      "CodesetApiBaseUrl": ${CodesetApiBaseUrl:-http://host.docker.internal:3166/resources}
      "SuomiFi__AuthorizationJwksJsonUrl": ${SuomiFi__AuthorizationJwksJsonUrl:-http://host.docker.internal:4078/auth/saml2/suomifi/.well-known/jwks.json}
    networks:
      - vfd-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  postgresdb:
    image: postgres:14
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: example
    volumes:
      - postgresdb:/var/lib/postgresql/data
    networks:
      - vfd-network
    labels:
      - "traefik.enable=false"

  adminer:
    image: adminer
    ports:
      - 8080:8080
    networks:
      - vfd-network

  redis:
    image: redis:6.2.13-alpine
    ports:
      - 6379:6379
    networks:
      - vfd-network

volumes:
  postgresdb:

networks:
  vfd-network:
    external: true
    driver: bridge
